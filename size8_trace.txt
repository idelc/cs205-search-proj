Black, White Puzzle Solver- idelc

Main Menu
1. 8 tiles, No Switching Order
2. 8 tiles, Switch Order
3. Custom Size, No Switching Order
4. Custom Size, Switch Order
5. Full Custom
0. Exit

5

Enter puzzle size: 8

Switch tile order when placing (Y/N)? y

What heuristic would you like to use?
1. Misplaced Tile
2. Manhattan Distance
3. Uniform Cost
1

Here is the puzzle so far:
[(0,_), (0,_), (1,W), (2,B), (3,W), (4,B), (5,W), (6,B), (7,W), (8,B)]
1. Swap tiles, keep order
2. Swap tiles, swap order
3. Continue
0. Return
3


[(0,_), (0,_), (1,W), (2,B), (3,W), (4,B), (5,W), (6,B), (7,W), (8,B)] cost: 0 heu: 0 in queue: 0

[(8,B), (7,W), (1,W), (2,B), (3,W), (4,B), (5,W), (6,B), (0,_), (0,_)] cost: 1 heu: 2 in queue: 6

[(7,W), (6,B), (1,W), (2,B), (3,W), (4,B), (5,W), (0,_), (0,_), (8,B)] cost: 1 heu: 2 in queue: 11

[(6,B), (5,W), (1,W), (2,B), (3,W), (4,B), (0,_), (0,_), (7,W), (8,B)] cost: 1 heu: 2 in queue: 15

[(6,B), (0,_), (0,_), (2,B), (3,W), (4,B), (1,W), (5,W), (7,W), (8,B)] cost: 2 heu: 1 in queue: 19

[(5,W), (4,B), (1,W), (2,B), (3,W), (0,_), (0,_), (6,B), (7,W), (8,B)] cost: 1 heu: 2 in queue: 23

[(4,B), (3,W), (1,W), (2,B), (0,_), (0,_), (5,W), (6,B), (7,W), (8,B)] cost: 1 heu: 2 in queue: 27

[(4,B), (0,_), (0,_), (2,B), (1,W), (3,W), (5,W), (6,B), (7,W), (8,B)] cost: 2 heu: 1 in queue: 31

[(2,B), (1,W), (0,_), (0,_), (3,W), (4,B), (5,W), (6,B), (7,W), (8,B)] cost: 1 heu: 2 in queue: 35

[(2,B), (1,W), (8,B), (7,W), (3,W), (4,B), (5,W), (6,B), (0,_), (0,_)] cost: 2 heu: 2 in queue: 39

[(2,B), (1,W), (7,W), (6,B), (3,W), (4,B), (5,W), (0,_), (0,_), (8,B)] cost: 2 heu: 2 in queue: 44

[(2,B), (1,W), (6,B), (5,W), (3,W), (4,B), (0,_), (0,_), (7,W), (8,B)] cost: 2 heu: 2 in queue: 46

[(2,B), (1,W), (5,W), (4,B), (3,W), (0,_), (0,_), (6,B), (7,W), (8,B)] cost: 2 heu: 2 in queue: 50

[(2,B), (1,W), (4,B), (3,W), (0,_), (0,_), (5,W), (6,B), (7,W), (8,B)] cost: 2 heu: 2 in queue: 52

[(4,B), (8,B), (7,W), (2,B), (1,W), (3,W), (5,W), (6,B), (0,_), (0,_)] cost: 3 heu: 1 in queue: 56

[(4,B), (7,W), (6,B), (2,B), (1,W), (3,W), (5,W), (0,_), (0,_), (8,B)] cost: 3 heu: 1 in queue: 61

[(4,B), (6,B), (5,W), (2,B), (1,W), (3,W), (0,_), (0,_), (7,W), (8,B)] cost: 3 heu: 1 in queue: 65

[(4,B), (3,W), (1,W), (2,B), (8,B), (7,W), (5,W), (6,B), (0,_), (0,_)] cost: 2 heu: 2 in queue: 69

[(4,B), (3,W), (1,W), (2,B), (7,W), (6,B), (5,W), (0,_), (0,_), (8,B)] cost: 2 heu: 2 in queue: 74

[(4,B), (3,W), (1,W), (2,B), (6,B), (5,W), (0,_), (0,_), (7,W), (8,B)] cost: 2 heu: 2 in queue: 76

[(4,B), (0,_), (0,_), (2,B), (6,B), (5,W), (1,W), (3,W), (7,W), (8,B)] cost: 3 heu: 1 in queue: 80

[(4,B), (3,W), (0,_), (0,_), (2,B), (1,W), (5,W), (6,B), (7,W), (8,B)] cost: 2 heu: 2 in queue: 84

[(5,W), (4,B), (1,W), (2,B), (3,W), (8,B), (7,W), (6,B), (0,_), (0,_)] cost: 2 heu: 2 in queue: 88

[(5,W), (4,B), (1,W), (2,B), (3,W), (7,W), (6,B), (0,_), (0,_), (8,B)] cost: 2 heu: 2 in queue: 93

[(5,W), (4,B), (0,_), (0,_), (3,W), (2,B), (1,W), (6,B), (7,W), (8,B)] cost: 2 heu: 2 in queue: 97

[(5,W), (0,_), (0,_), (2,B), (3,W), (1,W), (4,B), (6,B), (7,W), (8,B)] cost: 2 heu: 2 in queue: 100

[(5,W), (6,B), (4,B), (2,B), (3,W), (1,W), (0,_), (0,_), (7,W), (8,B)] cost: 3 heu: 1 in queue: 104

[(6,B), (8,B), (7,W), (2,B), (3,W), (4,B), (1,W), (5,W), (0,_), (0,_)] cost: 3 heu: 1 in queue: 108

[(6,B), (1,W), (4,B), (2,B), (3,W), (0,_), (0,_), (5,W), (7,W), (8,B)] cost: 3 heu: 1 in queue: 113

[(6,B), (4,B), (3,W), (2,B), (0,_), (0,_), (1,W), (5,W), (7,W), (8,B)] cost: 3 heu: 1 in queue: 116

[(6,B), (5,W), (1,W), (2,B), (3,W), (4,B), (8,B), (7,W), (0,_), (0,_)] cost: 2 heu: 2 in queue: 119

[(6,B), (5,W), (1,W), (2,B), (0,_), (0,_), (4,B), (3,W), (7,W), (8,B)] cost: 2 heu: 2 in queue: 124

[(6,B), (0,_), (0,_), (2,B), (1,W), (5,W), (4,B), (3,W), (7,W), (8,B)] cost: 3 heu: 1 in queue: 128

[(6,B), (5,W), (0,_), (0,_), (3,W), (4,B), (2,B), (1,W), (7,W), (8,B)] cost: 2 heu: 2 in queue: 132

[(7,W), (6,B), (1,W), (2,B), (3,W), (0,_), (0,_), (5,W), (4,B), (8,B)] cost: 2 heu: 2 in queue: 135

[(7,W), (6,B), (1,W), (2,B), (0,_), (0,_), (5,W), (4,B), (3,W), (8,B)] cost: 2 heu: 2 in queue: 139

[(7,W), (6,B), (1,W), (0,_), (0,_), (4,B), (5,W), (3,W), (2,B), (8,B)] cost: 2 heu: 2 in queue: 143

[(7,W), (6,B), (0,_), (0,_), (3,W), (4,B), (5,W), (2,B), (1,W), (8,B)] cost: 2 heu: 2 in queue: 147

[(7,W), (0,_), (0,_), (2,B), (3,W), (4,B), (5,W), (1,W), (6,B), (8,B)] cost: 2 heu: 2 in queue: 150

[(7,W), (8,B), (6,B), (2,B), (3,W), (4,B), (5,W), (1,W), (0,_), (0,_)] cost: 3 heu: 1 in queue: 154

[(8,B), (7,W), (1,W), (2,B), (3,W), (4,B), (0,_), (0,_), (6,B), (5,W)] cost: 2 heu: 2 in queue: 159

[(8,B), (0,_), (0,_), (2,B), (3,W), (4,B), (1,W), (7,W), (6,B), (5,W)] cost: 3 heu: 1 in queue: 163

[(8,B), (7,W), (1,W), (2,B), (3,W), (0,_), (0,_), (6,B), (5,W), (4,B)] cost: 2 heu: 2 in queue: 167

[(8,B), (7,W), (1,W), (2,B), (0,_), (0,_), (5,W), (6,B), (4,B), (3,W)] cost: 2 heu: 2 in queue: 169

[(8,B), (0,_), (0,_), (2,B), (1,W), (7,W), (5,W), (6,B), (4,B), (3,W)] cost: 3 heu: 1 in queue: 173

[(8,B), (4,B), (6,B), (2,B), (1,W), (7,W), (5,W), (0,_), (0,_), (3,W)] cost: 4 heu: 0 in queue: 177

[(8,B), (7,W), (0,_), (0,_), (3,W), (4,B), (5,W), (6,B), (2,B), (1,W)] cost: 2 heu: 2 in queue: 181

[(8,B), (7,W), (2,B), (6,B), (3,W), (4,B), (5,W), (0,_), (0,_), (1,W)] cost: 3 heu: 1 in queue: 185

[(8,B), (0,_), (0,_), (2,B), (3,W), (4,B), (5,W), (6,B), (1,W), (7,W)] cost: 2 heu: 2 in queue: 189

[(3,W), (2,B), (1,W), (0,_), (0,_), (4,B), (5,W), (6,B), (7,W), (8,B)] cost: 1 heu: 3 in queue: 192

[(3,W), (2,B), (1,W), (6,B), (5,W), (4,B), (0,_), (0,_), (7,W), (8,B)] cost: 2 heu: 2 in queue: 195

[(3,W), (2,B), (1,W), (6,B), (5,W), (4,B), (8,B), (7,W), (0,_), (0,_)] cost: 3 heu: 2 in queue: 199

[(3,W), (2,B), (1,W), (6,B), (0,_), (0,_), (4,B), (5,W), (7,W), (8,B)] cost: 3 heu: 2 in queue: 203

[(3,W), (2,B), (0,_), (0,_), (5,W), (4,B), (6,B), (1,W), (7,W), (8,B)] cost: 3 heu: 2 in queue: 206

[(3,W), (2,B), (6,B), (4,B), (5,W), (0,_), (0,_), (1,W), (7,W), (8,B)] cost: 4 heu: 1 in queue: 210

[(3,W), (0,_), (0,_), (6,B), (5,W), (4,B), (1,W), (2,B), (7,W), (8,B)] cost: 3 heu: 2 in queue: 213

[(0,_), (0,_), (1,W), (6,B), (5,W), (4,B), (2,B), (3,W), (7,W), (8,B)] cost: 3 heu: 2 in queue: 215

[(2,B), (4,B), (1,W), (6,B), (5,W), (0,_), (0,_), (3,W), (7,W), (8,B)] cost: 4 heu: 1 in queue: 217

[(3,W), (2,B), (1,W), (7,W), (6,B), (4,B), (5,W), (0,_), (0,_), (8,B)] cost: 2 heu: 3 in queue: 219

[(3,W), (2,B), (0,_), (0,_), (6,B), (4,B), (5,W), (7,W), (1,W), (8,B)] cost: 3 heu: 2 in queue: 223

[(3,W), (2,B), (4,B), (6,B), (0,_), (0,_), (5,W), (7,W), (1,W), (8,B)] cost: 4 heu: 1 in queue: 227

[(3,W), (2,B), (1,W), (5,W), (4,B), (0,_), (0,_), (6,B), (7,W), (8,B)] cost: 2 heu: 3 in queue: 230

[(3,W), (2,B), (0,_), (0,_), (4,B), (5,W), (1,W), (6,B), (7,W), (8,B)] cost: 3 heu: 2 in queue: 234

[(3,W), (0,_), (0,_), (1,W), (2,B), (4,B), (5,W), (6,B), (7,W), (8,B)] cost: 2 heu: 3 in queue: 237

[(3,W), (4,B), (2,B), (1,W), (0,_), (0,_), (5,W), (6,B), (7,W), (8,B)] cost: 3 heu: 2 in queue: 241

[(8,B), (6,B), (5,W), (2,B), (3,W), (4,B), (0,_), (0,_), (1,W), (7,W)] cost: 3 heu: 2 in queue: 244

[(8,B), (5,W), (4,B), (2,B), (3,W), (0,_), (0,_), (6,B), (1,W), (7,W)] cost: 3 heu: 2 in queue: 247

[(8,B), (5,W), (4,B), (2,B), (3,W), (7,W), (1,W), (6,B), (0,_), (0,_)] cost: 4 heu: 1 in queue: 251

[(8,B), (5,W), (4,B), (2,B), (3,W), (1,W), (6,B), (0,_), (0,_), (7,W)] cost: 4 heu: 1 in queue: 255

[(8,B), (4,B), (3,W), (2,B), (0,_), (0,_), (5,W), (6,B), (1,W), (7,W)] cost: 3 heu: 2 in queue: 259

[(8,B), (4,B), (3,W), (2,B), (1,W), (6,B), (5,W), (0,_), (0,_), (7,W)] cost: 4 heu: 1 in queue: 262

[(8,B), (3,W), (2,B), (0,_), (0,_), (4,B), (5,W), (6,B), (1,W), (7,W)] cost: 3 heu: 2 in queue: 265

[(8,B), (7,W), (2,B), (6,B), (3,W), (0,_), (0,_), (5,W), (4,B), (1,W)] cost: 4 heu: 1 in queue: 268

[(0,_), (0,_), (2,B), (6,B), (3,W), (4,B), (5,W), (7,W), (8,B), (1,W)] cost: 4 heu: 1 in queue: 271

[(8,B), (7,W), (6,B), (5,W), (3,W), (4,B), (0,_), (0,_), (2,B), (1,W)] cost: 3 heu: 2 in queue: 275

[(8,B), (7,W), (5,W), (4,B), (3,W), (0,_), (0,_), (6,B), (2,B), (1,W)] cost: 3 heu: 2 in queue: 278

[(8,B), (7,W), (4,B), (3,W), (0,_), (0,_), (5,W), (6,B), (2,B), (1,W)] cost: 3 heu: 2 in queue: 281

[(0,_), (0,_), (7,W), (8,B), (3,W), (4,B), (5,W), (6,B), (2,B), (1,W)] cost: 3 heu: 2 in queue: 284

[(8,B), (3,W), (4,B), (2,B), (1,W), (7,W), (5,W), (6,B), (0,_), (0,_)] cost: 4 heu: 1 in queue: 285

[(8,B), (6,B), (5,W), (2,B), (1,W), (7,W), (0,_), (0,_), (4,B), (3,W)] cost: 4 heu: 1 in queue: 289

[(8,B), (7,W), (1,W), (2,B), (4,B), (6,B), (5,W), (0,_), (0,_), (3,W)] cost: 3 heu: 2 in queue: 292

[(8,B), (7,W), (1,W), (2,B), (6,B), (5,W), (0,_), (0,_), (4,B), (3,W)] cost: 3 heu: 2 in queue: 296

[(8,B), (0,_), (0,_), (2,B), (6,B), (5,W), (1,W), (7,W), (4,B), (3,W)] cost: 4 heu: 1 in queue: 299

[(8,B), (7,W), (0,_), (0,_), (2,B), (1,W), (5,W), (6,B), (4,B), (3,W)] cost: 3 heu: 2 in queue: 303

[(8,B), (7,W), (4,B), (6,B), (2,B), (1,W), (5,W), (0,_), (0,_), (3,W)] cost: 4 heu: 1 in queue: 306

[(0,_), (0,_), (1,W), (2,B), (7,W), (8,B), (5,W), (6,B), (4,B), (3,W)] cost: 3 heu: 2 in queue: 310

[(8,B), (7,W), (1,W), (2,B), (3,W), (5,W), (6,B), (0,_), (0,_), (4,B)] cost: 3 heu: 2 in queue: 311

[(0,_), (0,_), (1,W), (2,B), (3,W), (7,W), (8,B), (6,B), (5,W), (4,B)] cost: 3 heu: 2 in queue: 313

[(8,B), (5,W), (6,B), (2,B), (3,W), (4,B), (1,W), (7,W), (0,_), (0,_)] cost: 4 heu: 1 in queue: 316

[(8,B), (6,B), (7,W), (2,B), (3,W), (4,B), (1,W), (0,_), (0,_), (5,W)] cost: 4 heu: 1 in queue: 320

[(8,B), (1,W), (4,B), (2,B), (3,W), (0,_), (0,_), (7,W), (6,B), (5,W)] cost: 4 heu: 1 in queue: 322

[(8,B), (4,B), (3,W), (2,B), (0,_), (0,_), (1,W), (7,W), (6,B), (5,W)] cost: 4 heu: 1 in queue: 325

[(8,B), (7,W), (1,W), (2,B), (0,_), (0,_), (4,B), (3,W), (6,B), (5,W)] cost: 3 heu: 2 in queue: 327

[(8,B), (0,_), (0,_), (2,B), (1,W), (7,W), (4,B), (3,W), (6,B), (5,W)] cost: 4 heu: 1 in queue: 330

[(8,B), (7,W), (0,_), (0,_), (3,W), (4,B), (2,B), (1,W), (6,B), (5,W)] cost: 3 heu: 2 in queue: 334

[(0,_), (0,_), (1,W), (2,B), (3,W), (4,B), (7,W), (8,B), (6,B), (5,W)] cost: 3 heu: 2 in queue: 336

[(7,W), (8,B), (6,B), (2,B), (3,W), (0,_), (0,_), (1,W), (5,W), (4,B)] cost: 4 heu: 1 in queue: 337

[(7,W), (8,B), (6,B), (2,B), (0,_), (0,_), (5,W), (1,W), (4,B), (3,W)] cost: 4 heu: 1 in queue: 340

[(0,_), (0,_), (6,B), (2,B), (3,W), (4,B), (5,W), (1,W), (8,B), (7,W)] cost: 4 heu: 1 in queue: 344

[(7,W), (5,W), (4,B), (2,B), (3,W), (0,_), (0,_), (1,W), (6,B), (8,B)] cost: 3 heu: 2 in queue: 348

[(0,_), (0,_), (4,B), (2,B), (3,W), (5,W), (7,W), (1,W), (6,B), (8,B)] cost: 4 heu: 1 in queue: 352

[(8,B), (6,B), (4,B), (2,B), (3,W), (5,W), (7,W), (1,W), (0,_), (0,_)] cost: 5 heu: 0 in queue: 356

Solution found at depth: 5
Total nodes expanded: 102
Max size of queue: 356
CPU time (linux only): 0.035648 seconds
Nodes at frontier: 356
